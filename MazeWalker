/**
 *Amanda Torres
 *August 24, 2016
 */
public class MazeWalker
{
    public static void run(){
        Maze maze = new Maze();
        MazeWalker mazeWalker = new MazeWalker();
        mazeWalker.walkMaze(maze.getMazeBot());
    }

    public void walkMaze(MazeBot mazeBot){
        while (mazeBot.didNotReachGoal())
        {
            if(mazeBot.canMoveForward())
            { 
                mazeBot.moveForward();
            } 
            else 
            {
                mazeBot.turnLeft();
                if(!mazeBot.canMoveForward())
                {
                    mazeBot.turnRight();
                    mazeBot.turnRight();
                }
            }
        }
        
        if(mazeBot.didReachGoal())
        {
            mazeBot.signalSuccess();
        }
        else
        {
            mazeBot.signalError();
        }
    }
}

/*
 * Amanda Torres 
 * August 23, 2016
 */
 //Activity 4
public void mazeWalker (MazeBot mazeBot) 
{
   while (mazeBot.canMoveForward()) 
   {
     mazeBot.moveForward();
   }
  
   mazeBot.turnLeft();
  
   while (mazeBot.canMoveForward()) 
   {
     mazeBot.moveForward();
   }
   
   mazeBot.turnRight();
   
   while (mazeBot.canMoveForward()) 
   {
     mazeBot.moveForward();
   }
   
    mazeBot.turnRight();
    
    while (mazeBot.canMoveForward()) 
    {
     mazeBot.moveForward();
   }
   
   mazeBot.turnLeft();
   
    while (mazeBot.canMoveForward()) 
    {
     mazeBot.moveForward();
   }
   
   mazeBot.turnLeft();
   
   while (mazeBot.canMoveForward()) 
   {
     mazeBot.moveForward();
   }
   
    mazeBot.turnRight();
    
     while (mazeBot.canMoveForward()) 
     {
     mazeBot.moveForward();
   }
   
   if (mazeBot.didReachGoal()) 
   {
      mazeBot.signalSuccess();
      }
   
   else {
      mazeBot.signalError();
      }
   }

//Activity 2 & 3
public void mazeWalker (MazeBot mazeBot) 
{
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnLeft();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnRight();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnRight();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnLeft();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnLeft();
    mazeBot.moveForward();
    mazeBot.moveForward();
    mazeBot.turnRight();
    mazeBot.moveForward();
    mazeBot.moveForward();
    }
  if (mazeBot.didReachGoal()) {
      mazeBot.signalSuccess();
      }
   
   else {
      mazeBot.signalError();
    }
   }
